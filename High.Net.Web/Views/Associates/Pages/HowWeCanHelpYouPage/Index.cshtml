@using EPiServer.Core
@using EPiServer.Web.Mvc.Html
@using High.Net.Core
@using High.Net.Models.Associates.Pages

@model High.Net.Models.Associates.ViewModels.HelpPageModel
@{
    var ContentLocator = EPiServer.ServiceLocation.ServiceLocator.Current.GetInstance<ContentLocator>();
    var HelpPage = ContentLocator.GetAll<HowWeCanHelpYouPage>(PageReference.StartPage).FirstOrDefault();
}

@section Siteheader{
    <style>
        .field-validation-error {
            color: red;
        }
    </style>
}
@Html.Partial("~/Views/Associates/Shared/Banner.cshtml")

<div class="container">
    @if (!Model._HelpPageForm.IsMailSendSuccessfully)
    {
        using (Html.BeginForm(null, null, FormMethod.Post,
        new { @action = Url.ContentUrl(HelpPage.ContentLink), @Class = "form-horizontal help" }))
        {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-md-8 col-sm-8">
                <div class="help-form">
                    <h2>How Can We Help You ?</h2>
                    <hr class="blue-border" />
                    <p>Please tell us about yourself, your areas of interest, and how can we help you? </p>

                    <div class="form-group c">
                        <label class="col-sm-2">Email*</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x._HelpPageForm.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x._HelpPageForm.Email)
                        </div>
                    </div>
                    <div class="form-group help">
                        <label class="col-sm-2">First Name*</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x._HelpPageForm.FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x._HelpPageForm.FirstName)
                        </div>
                    </div>
                    <div class="form-group help">
                        <label class="col-sm-2 ">Last Name*</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x._HelpPageForm.LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x._HelpPageForm.LastName)
                        </div>
                    </div>
                    <div class="form-group help">
                        <label class="col-sm-2 ">Company*</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x._HelpPageForm.Company, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x._HelpPageForm.Company)
                        </div>
                    </div>
                    <div class="form-group help">
                        <label class="col-sm-2 ">Zip Code*</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x._HelpPageForm.ZipCode, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x._HelpPageForm.ZipCode)
                        </div>
                    </div>
                    <div class="form-group help">
                        <label class="col-sm-2 ">Phone number</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x._HelpPageForm.Phone, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-8 col-sm-8">
                <h2 class="help-title">I am interested in these types of properties:</h2>
                <div class="row">
                    <div class="col-md-6 col-sm-6">
                        <div class="">
                            @for (int i = 0; i < Model._HelpPageForm.propertyTypeList.Take(3).Count(); i++)
                            {
                                @Html.CheckBoxFor(x => x._HelpPageForm.propertyTypeList[i].IsChecked) <span>&nbsp;</span> @Model._HelpPageForm.propertyTypeList[i].Property
                                @Html.HiddenFor(x => x._HelpPageForm.propertyTypeList[i].Property) <br /> 
                            }
                        </div>
                    </div>
                    <div class="col-md-6 col-sm-6">
                        <div class="">
                            @for (int i = 3; i < Model._HelpPageForm.propertyTypeList.Count; i++)
                            {
                                @Html.CheckBoxFor(x => x._HelpPageForm.propertyTypeList[i].IsChecked) <span>&nbsp;</span> @Model._HelpPageForm.propertyTypeList[i].Property
                                @Html.HiddenFor(x => x._HelpPageForm.propertyTypeList[i].Property) <br /> 
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="row">
            <div class="col-md-8 col-sm-8">
                <h2 class="help-title">I am interested in these services:</h2>
                <div class="row">
                    <div class="col-md-6 col-sm-6">
                        <div class="">
                            @for (int i = 0; i < Model._HelpPageForm.serviceTypeList.Count; i++)
                            {
                                @Html.CheckBoxFor(x => x._HelpPageForm.serviceTypeList[i].IsChecked) <span>&nbsp;</span> @Model._HelpPageForm.serviceTypeList[i].Service 
                                @Html.HiddenFor(x => x._HelpPageForm.serviceTypeList[i].Service) <br /> 
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-8 col-sm-8">
                <h2 class="help-title">Please tell us how we can help you</h2>
                <div class="row">
                    <div class="col-md-12 col-sm-12">
                        <div class="help-checkbox">
                            @Html.TextBoxFor(x => x._HelpPageForm.HelpText, new { @class = "form-control" })
                            <button type="submit" class="btn btn-submit">Submit</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>  
        }
    }
    else
    {
        @(new HtmlString(Model._HelpPageForm.ThankYouMessageText))
    }
</div>
<div class="spacer"></div>

