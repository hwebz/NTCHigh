@using EPiServer.Core;
@using EPiServer.Web.Mvc.Html
@using High.Net.Core
@using High.Net.Models.HighConstructionCo.Pages
@using ImageVault.EPiServer
@using High.Net.Models.HighConstructionCo.Blocks
@model PageViewModel<HomePage>
@{
    var contentLoader = EPiServer.ServiceLocation.ServiceLocator.Current.GetInstance<EPiServer.IContentLoader>();
    var dataLocator = EPiServer.ServiceLocation.ServiceLocator.Current.GetInstance<High.Net.Web.Business.DataLocator>();
    var newsListingPage = contentLoader.GetChildren<High.Net.Models.Shared.Pages.NewsListingPage>(Model.CurrentPage.ContentLink).FirstOrDefault();
}
@Html.FullRefreshPropertiesMetaData(new[] { "ProductsContent" })
<div class="container width-960">
    <div class="hiring" @Html.EditAttributes(x => x.CurrentPage.ServiceContent)>
        @if (Model.CurrentPage.ServiceContent.Items.Any() || Model.CurrentPage.ServiceContent != null)
        {
            <div class="row">
                @foreach (var contentItem in Model.CurrentPage.ServiceContent.Items.Take(2))
                {
                    var _ImageTextBlock = contentLoader.Get<ImageTextBlock>(contentItem.ContentLink);
                    <div class="col-lg-6 col-sm-12">
                        <div class="row">
                            <div class="col-lg-3 col-sm-3">
                                <div class="icon-wrap ico-bg round">
                                    <a href="@Url.ContentUrl(_ImageTextBlock.TargetLink)"> @Html.PropertyFor(x => _ImageTextBlock.Image, new { PropertySettings = new PropertyMediaSettings { Width = 94, Height = 94 } })</a>
                                </div>
                            </div>
                            <div class="col-lg-9 col-sm-9">
                                <div class="content home">
                                    <a href="@Url.ContentUrl(_ImageTextBlock.TargetLink)"><h3 class="title">@Html.PropertyFor(x => _ImageTextBlock.Heading)</h3></a>
                                    @Html.PropertyFor(x => _ImageTextBlock.Text)
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="spacer spacer-top-8"></div>
            <div class="row">
                @foreach (var contentItem in Model.CurrentPage.ServiceContent.Items.Skip(2).Take(2))
                {
                    var _ImageTextBlock = contentLoader.Get<ImageTextBlock>(contentItem.ContentLink);
                    <div class="col-lg-6 col-sm-12">
                        <div class="row">
                            <div class="col-lg-3 col-sm-3">
                                <div class="icon-wrap ico-bg round">
                                    <a href="@Url.ContentUrl(_ImageTextBlock.TargetLink)"> @Html.PropertyFor(x => _ImageTextBlock.Image, new { PropertySettings = new PropertyMediaSettings { Width = 94, Height = 94 } })</a>
                                </div>
                            </div>
                            <div class="col-lg-9 col-sm-9">
                                <div class="content home">
                                    <a href="@Url.ContentUrl(_ImageTextBlock.TargetLink)"><h3 class="title">@Html.PropertyFor(x => _ImageTextBlock.Heading)</h3></a>
                                    @Html.PropertyFor(x => _ImageTextBlock.Text)
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<div class="property">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 col-sm-12" @Html.EditAttributes(x => x.CurrentPage.FeatureWorkLinks)>
                <h2 style="text-align: center;">Featured Projects</h2>
                <br />
                @if (Model.CurrentPage.FeatureWorkLinks != null)
                {
                    int counter = 0;
                    foreach (var Item in Model.CurrentPage.FeatureWorkLinks)
                    {
                        var content = EPiServer.Web.Routing.UrlResolver.Current.Route(new EPiServer.UrlBuilder(Item.Href));
                        var porjectItemPage = contentLoader.Get<ProjectItemPage>(content.ContentLink);
                        //if (counter == 0)
                        //{
                        //    @Html.Raw("<div class=\"\">")
                        //}
                        //else if (counter > 0 && counter % 4 == 0)
                        //{
                        //    @Html.Raw("</div><div class=\"\">")
                        //}
                        <div class="col-sm-3 no-padding">
                            <div class="box">
                                @Html.PropertyFor(x => porjectItemPage.PageImage, new { PropertySettings = new PropertyMediaSettings { Width = 295, Height = 214, ResizeMode = ImageVault.Common.Data.ResizeMode.ScaleToFill }, CssClass = "img-responsive" })
                                <div class="zoom-icon">
                                    <a href="@Url.ContentUrl(porjectItemPage.ContentLink)">
                                        <h2><i class="icon-search"></i></h2>
                                    </a>
                                    <p>@porjectItemPage.ProjectName</p>
                                </div>
                            </div>
                        </div>
                        counter++;
                    }
                    @Html.Raw("</div>")
                }
            </div>
        </div>
    </div>
</div>

<div class="property gray-bg">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 col-sm-6 text-left">
                <h1>Videos</h1>
                <div class="row col-lg-12 col-sm-12 text-center">
                    <div class="home_video1" @Html.EditAttributes(x => x.CurrentPage.VideoLink)>
                        <iframe width="100%" height="280" src="@Model.CurrentPage.VideoLink" frameborder="0"></iframe>
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="row col-lg-12 col-sm-12 text-center">
                    <div class="home_video2">
                        <div class="media-body">
                            <h2><a href="#" class="p-head" style="color: #000;">@Html.PropertyFor(x => x.CurrentPage.VideoHeading)</a></h2>
                            @Html.PropertyFor(x => x.CurrentPage.VideoDescription)
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-sm-6">
                <h1>Latest News</h1>
                <div>
                    @if (newsListingPage != null)
                    {
                        //var NewsItemPages = contentLoader.GetChildren<High.Net.Models.Shared.Pages.NewsItemPage>(newsListingPage.ContentLink);
                        var NewsItemPages = dataLocator.GetNewsFeed(newsListingPage);
                        foreach (var item in NewsItemPages.Take(3))
                        {
                            <article class="media">
                                <div class="row">
                                    <div class="col-lg-4 col-md-4 col-sm-5 col-xs-3">
                                        <a class="pull-left thumb p-thumb">
                                            <div class="date1">@item.PostedDate.ToString("dd MMM")</div>
                                            @if (item.NewsImage != null)
                                            {
                                                @Html.PropertyFor(x => item.NewsImage, new { PropertySettings = new PropertyMediaSettings { Width = 150, Height = 150, ResizeMode = ImageVault.Common.Data.ResizeMode.ScaleToFill } })
                                            }
                                            else
                                            {
                                                <img class="placeholder" src="~/Static/global/images/news-placeholder-150X150.jpg" />
                                            }
                                        </a>
                                    </div>
                                    <div class="col-lg-8 col-md-8 col-sm-7  col-xs-9">
                                        <div class="media-body">
                                            <a href="@Url.ContentUrl(item.ContentLink)" class="p-head">@item.Title</a>
                                            @*<div class="white">@item.NewsHighlight</div>*@
                                            <p>
                                                <strong><a href="@Url.ContentUrl(item.ContentLink)" class="readmore">read more...</a></strong>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </article>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>
