@using EPiServer.Core
@using High.Net.Core
@using High.Net.Models.GreenfieldArchitects.Pages
@using EPiServer.ServiceLocation
@using EPiServer.Web
@model High.Net.Web.Business.ViewModels.SearchContentModel
@{
    var contentLoader = ServiceLocator.Current.GetInstance<EPiServer.IContentLoader>();
    var homePage = contentLoader.Get<HomePage>(SiteDefinition.Current.StartPage);
}
@Html.Partial("~/Views/GreenfieldArchitects/Shared/Banner.cshtml", Model.CurrentPage.BannerImage != null ? Model.CurrentPage.BannerImage : new ImageVault.EPiServer.MediaReference())
@if (homePage.SearchPageUrl != null)
{
    <div class="container">
        <div class="black-band">
            <div class="container">
                <h1>@Model.CurrentPage.Name</h1>
            </div>
        </div>
        <div class="common-container">
            <div class="about">
                <div class="row">
                    <div class="col-md-12">
                        @using (Html.BeginForm(null, null, EPiServer.Editor.PageEditing.PageIsInEditMode ? FormMethod.Post : FormMethod.Get, new { @action = Url.ContentUrl(homePage.SearchPageUrl) }))
                        {
                            <input class="search-input" id="q" type="text" value="@Model.SearchQuery" name="q">
                            <input class="btn btn-sm search-button" type="submit" value="Search">
                        }
                        @if (Model.Results != null)
                        {
                            if (!string.IsNullOrEmpty(Model.SearchQuery))
                            {
                                <p>Your Search for <i>@Model.SearchQuery resulted in @Model.Results.TotalMatching hits</i></p>
                            }
                            else
                            {
                                <p>Total hits: @Model.Results.TotalMatching</p>
                            }
                            <div class="listResult">
                                <ul>
                                    @foreach (var hit in Model.Results.Hits)
                                    {
                                        <li>
                                            <h4><a href="@hit.Document.Url">@Html.Raw(hit.Document.Title)</a></h4>
                                            <p>@Html.Raw(hit.Document.Excerpt)</p>
                                        </li>
                                    }
                                </ul>
                            </div>
                            <div class="pag">
                                <ul class="pagination">
                                    @foreach (var pagerLink in Model.PagerLinks)
                                    {
                                        if (pagerLink.IsActivePage)
                                        {
                                            <li class="active"><a href="#">@pagerLink.LinkText</a></li>
                                        }
                                        else
                                        {
                                            <li>@Html.RouteLink(pagerLink.LinkText, pagerLink.Route)</li>
                                        }
                                    }
                                </ul>
                            </div>
                        }<br><br>
                    </div>
                </div>
            </div>
        </div>
    </div>
}