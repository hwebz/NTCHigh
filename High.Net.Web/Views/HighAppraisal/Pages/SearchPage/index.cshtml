@using EPiServer.Core
@using High.Net.Core
@using High.Net.Models.HighAppraisal.Pages
@using EPiServer.ServiceLocation
@using EPiServer.Web
@using HAPP = High.Net.Models.HighAppraisal.Pages
@using HA = High.Net.Models.Associates.Pages

@model High.Net.Web.Business.ViewModels.SearchContentModel
@{
    var contentLoader = ServiceLocator.Current.GetInstance<EPiServer.IContentLoader>();
    var repository = ServiceLocator.Current.GetInstance<EPiServer.IContentRepository>();
    HAPP.HomePage homePage;
    if (Model.CurrentPage.GetType().BaseType == typeof(HAPP.HomePage))
    {
        homePage = contentLoader.Get<HAPP.HomePage>(Model.CurrentPage.ContentLink) as HAPP.HomePage;
    }
    else
    {
        homePage = repository.GetAncestors(Model.CurrentPage.ContentLink).Where(x => x.GetType().BaseType == typeof(HAPP.HomePage)).FirstOrDefault() as HAPP.HomePage;
    }
}
@Html.Partial("~/Views/HighAppraisal/Shared/Banner.cshtml")
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="spacer"></div>
            @using (Html.BeginForm(null, null, EPiServer.Editor.PageEditing.PageIsInEditMode ? FormMethod.Post : FormMethod.Get, new {@action = Url.ContentUrl(homePage.SearchPageUrl)}))
            {
                <input class="search-input" id="q" type="text" value="@Model.SearchQuery" name="q">
                <input class="btn search-button" type="submit" value="Search">
            }
            @if (Model.Results != null)
            {
                if (!string.IsNullOrEmpty(Model.SearchQuery))
                {
                    <p>Your Search for <i>@Model.SearchQuery resulted in @Model.Results.TotalMatching hits</i>
                    </p>
                }
                else
                {
                    <p>Total hits: @Model.Results.TotalMatching</p>
                }
                <div class="listResult">
                    <ul>
                        @foreach (var hit in Model.Results)
                        {
                            <li>
                                <h4><a href="@hit.Url">@Html.Raw(hit.Title)</a></h4>
                                <p>@Html.Raw(hit.Excerpt)</p>
                            </li>
                        }
                    </ul>
                </div>
                <div class="pag">
                    <ul class="pagination">
                        @foreach (var pagerLink in Model.PagerLinks)
                        {
                            if (pagerLink.IsActivePage)
                            {
                                <li class="active"><a href="#">@pagerLink.LinkText</a></li>
                            }
                            else
                            {
                                <li>@Html.RouteLink(pagerLink.LinkText, pagerLink.Route)</li>
                            }
                        }
                    </ul>
                </div>
            }<br><br>
        </div>
    </div>
</div>

